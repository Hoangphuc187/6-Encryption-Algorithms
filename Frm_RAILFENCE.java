/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package week_01;

import java.util.Arrays;

/**
 *
 * @author NITRO-5
 */
public class Frm_RAILFENCE extends javax.swing.JFrame {

    /**
     * Creates new form Frm_RAILFENCE
     */
    public Frm_RAILFENCE() {
        initComponents();
    }
    public static String encryptRaiFence(String text,int key){
      char[][] rail = new char[key][text.length()];
    for (int i = 0; i < key; i++) {
        Arrays.fill(rail[i], '\n');
    }

    boolean dirDown = false;
    int row = 0, col = 0;
    for (int i = 0; i < text.length(); i++) {
        if (row == 0 || row == key - 1) {
            dirDown = !dirDown;
        }

        rail[row][col++] = text.charAt(i);

        if (dirDown) {
            row++;
        } else {
            row--;
        }
    }

    StringBuilder result = new StringBuilder();
    for (int i = 0; i < key; i++) {
        for (int j = 0; j < text.length(); j++) { 
            if (rail[i][j] != '\n') {
                result.append(rail[i][j]);
            }
        }
    }
    return result.toString();
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_vanban = new javax.swing.JTextArea();
        txt_khoa = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_banro = new javax.swing.JTextArea();
        btnencrypt = new javax.swing.JButton();
        btndecrypt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Chương trình mã hóa RAIL FENCE");

        jLabel2.setText("Vanban");

        jLabel3.setText("khoa");

        jLabel4.setText("banro");

        txt_vanban.setColumns(20);
        txt_vanban.setRows(5);
        jScrollPane1.setViewportView(txt_vanban);

        txt_banro.setColumns(20);
        txt_banro.setRows(5);
        jScrollPane2.setViewportView(txt_banro);

        btnencrypt.setText("Mã Hóa");
        btnencrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnencryptActionPerformed(evt);
            }
        });

        btndecrypt.setText("Giải Mã");
        btndecrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndecryptActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnencrypt)
                                .addComponent(txt_khoa)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btndecrypt)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel1))
                .addGap(82, 82, 82))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_khoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(btnencrypt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btndecrypt)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btndecryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndecryptActionPerformed
        // TODO add your handling code here:
        String Cipher =txt_banro.getText();
        int key=Integer.valueOf(txt_khoa.getText());
        String Plain = decryptRailFence(Cipher,key);
        txt_vanban.setText(Plain.toUpperCase());
    }//GEN-LAST:event_btndecryptActionPerformed
public static String decryptRailFence(String cipher, int key) {
    char[][] DeRail = new char[key][cipher.length()];
    boolean dirDown = false;
    int row = 0, col = 0;
    for (int i = 0; i < cipher.length(); i++) {
        if (row == 0 || row == key - 1)
            dirDown = !dirDown;
        DeRail[row][col++] = '*';
        if (dirDown) {
            row++;
        } else {
            row--;
        }
    }
    int index = 0;
    for (int i = 0; i < key; i++) {
        for (int j = 0; j < cipher.length(); j++) {
            if (DeRail[i][j] == '*' && index < cipher.length()) {
                DeRail[i][j] = cipher.charAt(index++);
            }
        }
    }
    StringBuilder result = new StringBuilder();
    dirDown = false;
    row = 0;
    col = 0;  
    for (int i = 0; i < cipher.length(); i++) {
        if (row == 0 || row == key - 1)
            dirDown = !dirDown;     
        if (DeRail[row][col] != '\n') {
            result.append(DeRail[row][col++]);
        }
        if (dirDown) {
            row++;
        } else {
            row--;
        }
    }
    return result.toString();
}

    
    private void btnencryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnencryptActionPerformed
        // TODO add your handling code here:
        String plain = txt_vanban.getText();
    int key = Integer.valueOf(txt_khoa.getText());
    String Cipher = encryptRaiFence(plain, key);
    txt_banro.setText(Cipher.toUpperCase());
    }//GEN-LAST:event_btnencryptActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frm_RAILFENCE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frm_RAILFENCE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frm_RAILFENCE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frm_RAILFENCE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frm_RAILFENCE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndecrypt;
    private javax.swing.JButton btnencrypt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txt_banro;
    private javax.swing.JTextField txt_khoa;
    private javax.swing.JTextArea txt_vanban;
    // End of variables declaration//GEN-END:variables

   
}
